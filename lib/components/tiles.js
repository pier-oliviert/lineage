// Generated by CoffeeScript 1.4.0
(function() {
  var Tiles,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  chrome.app.Components.Tiles = Tiles = (function() {

    function Tiles(stage, options) {
      var offset;
      if (options == null) {
        options = {};
      }
      this.blur = __bind(this.blur, this);

      this.focus = __bind(this.focus, this);

      offset = {
        x: 0,
        y: 0
      };
      this.textures = {
        normal: new PIXI.Texture.fromImage("assets/textures/tile.png"),
        hover: new PIXI.Texture.fromImage("assets/textures/tile-hover.png")
      };
      this.placeTile(stage, offset, options.tileSize, {
        width: options.width,
        height: options.height
      });
    }

    Tiles.prototype.tiles = function() {
      this.tiles = function() {
        return this.tiles.value;
      };
      this.tiles.value = [];
      return this.tiles();
    };

    Tiles.prototype.placeTile = function(stage, offset, tileSize, canvasSize) {
      var tile;
      tile = new PIXI.Sprite(this.textures.normal);
      tile.width = tile.height = tileSize;
      tile.position = new PIXI.Point(offset.x, offset.y);
      stage.addChild(tile);
      this.tiles().push(tile);
      offset.x += tile.width;
      if (offset.x >= canvasSize.width) {
        offset.x = 0;
        offset.y += tile.height;
        if (offset.y >= canvasSize.height) {
          return this.tiles();
        }
      }
      return this.placeTile(stage, offset, tileSize, canvasSize);
    };

    Tiles.prototype.update = function(stage) {
      return this.renderer.render(stage);
    };

    Tiles.prototype.focus = function(data) {
      var sprite;
      sprite = data.target;
      return sprite.setTexture(this.textures.hover);
    };

    Tiles.prototype.blur = function(data) {
      var sprite;
      sprite = data.target;
      return sprite.setTexture(this.textures.normal);
    };

    return Tiles;

  })();

}).call(this);
