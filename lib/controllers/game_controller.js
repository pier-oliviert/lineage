// Generated by CoffeeScript 1.4.0
(function() {
  var GameController;

  chrome.app.Controllers.Game = GameController = (function() {

    function GameController(character) {
      var packet;
      packet = new chrome.app.Packets.SelectCharacter(character);
      packet.bufferize(Lineage.socket.send);
    }

    GameController.prototype.load = function() {
      return this.engine = new chrome.app.Engine([
        {
          name: "background",
          url: "/templates/game.html",
          logic: chrome.app.Engine.Background
        }, {
          name: "chat",
          url: "/templates/chat.html",
          logic: chrome.app.Engine.Chat
        }
      ]);
    };

    GameController.prototype.render = function() {
      $(document.body).empty();
      this.load();
      return this.eventify($(document.body));
    };

    GameController.prototype.eventify = function($html) {
      var _this = this;
      $html.on("submit", "form", function(e) {
        var $input, global, message, packet;
        $input = $(this).children("input").first();
        message = $input.val();
        $input.val("");
        global = $("#chat ul.types li.active").hasClass("global");
        packet = new chrome.app.Packets.Chat(message, global);
        packet.bufferize(Lineage.socket.send);
        return false;
      });
      return $html.on("click", "#chat ul.types li", function(e) {
        return _this.engine.components.chat.toggle($(e.target));
      });
    };

    GameController.prototype.received = function(packet) {
      switch (packet.id) {
        case PacketId.Chat:
        case PacketId.GlobalChat:
        case PacketId.WhisperChat:
          this.engine.components.chat.received(packet);
          break;
        case PacketId.CharInfo:
          this.update(this.character.find(packet));
      }
      return console.log(packet);
    };

    return GameController;

  })();

}).call(this);
