// Generated by CoffeeScript 1.4.0
(function() {
  var ChatPacket,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  chrome.app.Packets.Chat = ChatPacket = (function(_super) {

    __extends(ChatPacket, _super);

    ChatPacket.prototype.types = {
      normal: 0,
      whisper: 1,
      shouting: 2,
      global: 3,
      clan: 4
    };

    function ChatPacket(message, type) {
      this.packaged = __bind(this.packaged, this);
      ChatPacket.__super__.constructor.call(this, this.opcode(type), ["message", "type"]);
      this.type(this.types[type]);
      this.message(message);
    }

    ChatPacket.prototype.opcode = function(type) {
      switch (this.types[type]) {
        case 3:
          return 115;
        case 0:
        case 2:
        case 4:
          return 18;
        case 1:
          return 92;
      }
    };

    ChatPacket.prototype.message = function() {
      if (arguments.length === 0) {
        return;
      }
      return this.process(arguments[0], "message");
    };

    ChatPacket.prototype.type = function() {
      if (arguments.length === 0) {
        return;
      }
      return this.packed("type", arguments[0] & 0xFF);
    };

    ChatPacket.prototype.length = function() {
      return ChatPacket.__super__.length.apply(this, arguments) + this.message().length + 1;
    };

    ChatPacket.prototype.packaged = function(buffer) {
      buffer.join([this.type() & 0xFF], 1);
      return buffer.join(this.message(), 2);
    };

    return ChatPacket;

  })(Packet);

}).call(this);
