// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.LogPacket = (function(_super) {

    __extends(LogPacket, _super);

    function LogPacket(op) {
      this["package"] = __bind(this["package"], this);

      this.append = __bind(this.append, this);
      LogPacket.__super__.constructor.apply(this, arguments);
      this.buffer = {};
    }

    LogPacket.prototype.length = function() {
      return LogPacket.__super__.length.apply(this, arguments) + this.user.length + this.password.length + 2;
    };

    LogPacket.prototype.append = function(name, buffer) {
      var idx;
      switch (name) {
        case "user":
          this.buffer[0] = buffer;
          break;
        case "password":
          this.buffer[1] = buffer;
      }
      if ((this.buffer[0] != null) && (this.buffer[1] != null)) {
        idx = 1;
        idx += this.view.join(this.buffer[0], idx);
        idx += this.view.join([0x00], idx);
        idx += this.view.join(this.buffer[1], idx);
        idx += this.view.join([0x00], idx);
        return this.packaged(this.view);
      }
    };

    LogPacket.prototype["package"] = function(view) {
      var _this = this;
      this.view = view;
      this.user.bufferize(function(user) {
        return _this.append("user", user);
      });
      return this.password.bufferize(function(pwd) {
        return _this.append("password", pwd);
      });
    };

    return LogPacket;

  })(Packet);

}).call(this);
