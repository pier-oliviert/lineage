// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.Decryptor = (function(_super) {

    __extends(Decryptor, _super);

    function Decryptor() {
      return Decryptor.__super__.constructor.apply(this, arguments);
    }

    Decryptor.prototype.process = function(data) {
      var first, key, keys, second, size, third;
      size = data.length;
      keys = this.keys(this.seed);
      third = data[3];
      data[3] ^= keys[2];
      second = data[2];
      data[2] ^= third ^ keys[3];
      first = data[1];
      data[1] ^= second ^ keys[4];
      key = data[0] ^ first ^ keys[5];
      data[0] = key ^ keys[0];
      for (var i = 1; i < size; i++) {
      t = data[i]
      data[i] ^= (keys[i & 7] ^ key)
      key = t
    };

      this.update(this.mask(data));
      return data;
    };

    return Decryptor;

  })(Encryption);

}).call(this);
